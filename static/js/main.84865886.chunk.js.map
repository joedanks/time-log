{"version":3,"sources":["TimeBox.tsx","TimeRange.tsx","App.tsx","index.tsx"],"names":["TimeBox","props","type","value","time","onChange","e","setTime","target","TimeRange","useState","startTime","setStartTime","endTime","setEndTime","useEffect","split","startHour","startMinute","endHour","endMinute","hours","Number","parseInt","mins","setDiff","className","App","morningDiff","setMorningDiff","afternoonDiff","setAfternoonDiff","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAeeA,MAbf,SAAiBC,GAIb,OACI,6BACI,2BAAOC,KAAK,OACRC,MAAOF,EAAMG,KACbC,SAAU,SAACC,GAAD,OAAOL,EAAMM,QAAQD,EAAEE,OAAOL,YCwBzCM,MA3Bf,SAAmBR,GAAwB,IAAD,EACJS,mBAAS,IADL,mBAC/BC,EAD+B,KACpBC,EADoB,OAERF,mBAAS,IAFD,mBAE/BG,EAF+B,KAEtBC,EAFsB,KAmBtC,OAfAC,qBAAU,WACN,GAAKJ,GAAcE,EAAnB,CADY,MAMqBF,EAAUK,MAAM,KANrC,mBAMLC,EANK,KAMMC,EANN,OAOiBL,EAAQG,MAAM,KAP/B,mBAOLG,EAPK,KAOIC,EAPJ,KASNC,EAAQC,OAAOC,SAASJ,GAAWG,OAAOC,SAASN,GACnDO,EAAOF,OAAOC,SAASH,GAAaE,OAAOC,SAASL,GAE1DjB,EAAMwB,QAA0C,IAAhCD,EAAO,EAAIH,EAAQA,EAAQ,IAAYG,EAAO,EAAIA,EAAO,GAAKA,SAV1EvB,EAAMwB,QAAQ,KAWnB,CAACd,EAAWE,EAASZ,IAGpB,yBAAKyB,UAAU,aACX,kBAAC,EAAD,CAAStB,KAAMO,EAAWJ,QAASK,IACnC,kBAAC,EAAD,CAASR,KAAMS,EAASN,QAASO,MCP9Ba,MAlBf,WAAgB,IAAD,EACyBjB,mBAAS,GADlC,mBACNkB,EADM,KACOC,EADP,OAE6BnB,mBAAS,GAFtC,mBAENoB,EAFM,KAESC,EAFT,KAIb,OACE,yBAAKL,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAWD,QAASI,IACpB,oCACA,kBAAC,EAAD,CAAWJ,QAASM,IACnB,WACD,8BACEH,EAAcE,GAAiB,MCXzCE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.84865886.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TimeBox(props: {\r\n    time: string,\r\n    setTime(time: string): void\r\n}) {\r\n    return (\r\n        <div>\r\n            <input type='time'\r\n                value={props.time}\r\n                onChange={(e) => props.setTime(e.target.value)} />  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeBox;","import React, { useState, useEffect } from 'react';\r\nimport TimeBox from './TimeBox'\r\n\r\ntype TimeRangeProps = {\r\n    setDiff(minutes: number): void\r\n}\r\n\r\nfunction TimeRange(props: TimeRangeProps) {\r\n    const [startTime, setStartTime] = useState(\"\");\r\n    const [endTime, setEndTime] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!startTime || !endTime) {\r\n            props.setDiff(0);\r\n            return;\r\n        }\r\n\r\n        const [startHour, startMinute] = startTime.split(':');\r\n        const [endHour, endMinute] = endTime.split(':');\r\n\r\n        const hours = Number.parseInt(endHour) - Number.parseInt(startHour);\r\n        const mins = Number.parseInt(endMinute) - Number.parseInt(startMinute);\r\n\r\n        props.setDiff(((mins > 0 ? hours : hours - 1) * 60) + (mins > 0 ? mins : 60 + mins))\r\n    }, [startTime, endTime, props])\r\n\r\n    return (\r\n        <div className='timeRange'>\r\n            <TimeBox time={startTime} setTime={setStartTime} />\r\n            <TimeBox time={endTime} setTime={setEndTime} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeRange;","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport TimeRange from './TimeRange'\n\nfunction App() {\n  const [morningDiff, setMorningDiff] = useState(0);\n  const [afternoonDiff, setAfternoonDiff] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TimeRange setDiff={setMorningDiff} />\n        <p>Lunch</p>\n        <TimeRange setDiff={setAfternoonDiff} />\n        {'========'}\n        <br/>\n        {(morningDiff + afternoonDiff) / 60}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}